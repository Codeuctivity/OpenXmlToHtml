name: .NET build and test
env:
  CURRENT_VERSION: 2.0.${{ github.run_number }}
  LAST_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            8.0.x
            10.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release
      - name: Publish Unit Test Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: TestResult
          path: "TestResult/**/*"

  deployRelease:
    if: ${{ github.ref == 'refs/heads/release' }}
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            8.0.x
            10.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: |
          dotnet build --configuration Release --no-restore
          dotnet publish ./OpenXmlToHtmlOpenApi -c Release /p:WebPublishMethod=Package
          dotnet publish ./OpenXmlToHtmlCli -c Release
      - name: Zip
        run: |
          Compress-Archive -Path ".\OpenXmlToHtmlCli\bin\Release\net8.0\win-x64\publish\*" -DestinationPath ".\OpenXmlToHtmlCli.zip" -Force
      - name: NugetPush
        env:
          NUGET_TOKEN_EXISTS: ${{ secrets.NUGET_TOKEN }}
        if: env.NUGET_TOKEN_EXISTS != ''
        run: |
          dotnet nuget push .\OpenXmlToHtml\bin\Release\*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json
      - name: Github Prelease
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        if: env.GITHUB_TOKEN != ''
        run: |
          gh release create ${{env.CURRENT_VERSION}} ./OpenXmlToHtmlOpenApi/bin/Release/net8.0/OpenXmlToHtmlOpenApi.zip ./OpenXmlToHtmlCli.zip ./OpenXmlToHtml/bin/Release/*.*nupkg --generate-notes

  deployTest:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            8.0.x
            10.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: |
          dotnet build --configuration Release --no-restore
          dotnet publish ./OpenXmlToHtmlOpenApi -c Release /p:WebPublishMethod=Package
          dotnet publish ./OpenXmlToHtmlCli -c Release
      - name: Zip
        run: |
          Compress-Archive -Path ".\OpenXmlToHtmlCli\bin\Release\net8.0\win-x64\publish\*" -DestinationPath ".\OpenXmlToHtmlCli.zip" -Force
      - name: NugetPush
        env:
          NUGET_TOKEN_EXISTS: ${{ secrets.NUGET_TEST_TOKEN }}
        if: env.NUGET_TOKEN_EXISTS != ''
        run: |
          dotnet nuget push .\OpenXmlToHtml\bin\Release\*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_TEST_TOKEN}} --source https://apiint.nugettest.org/v3/index.json
      - name: Github Prelease
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        if: env.GITHUB_TOKEN != ''
        run: |
          gh release create ${{env.CURRENT_VERSION}} ./OpenXmlToHtmlOpenApi/bin/Release/net8.0/OpenXmlToHtmlOpenApi.zip ./OpenXmlToHtmlCli.zip ./OpenXmlToHtml/bin/Release/*.*nupkg  --prerelease --generate-notes
